{"/about/":{"data":{"":" Hello, I\u0026rsquo;m Vinay a FOSS enthusiast and a undergraduate, currently Hack\u0026rsquo;ing at Deeproot GNU/Linux.\nI\u0026rsquo;m a Debian Maintainer,maintaining \u0026amp; working on packages of GitLab and its components on Debian.\nPlease feel free to hit me up if you want to get in contact or want to know about me. I go by the handle vinay-keshava across the web.\nEmail/XMPP: vinaykeshava [AT] disroot.org\n"},"title":"About"},"/blog/":{"data":{"":""},"title":"Blog"},"/blog/automating-debian-installer/":{"data":{"":"The Debian Graphical Installer,when i was introduced to Kali Linux(a Debian based distro),during my initial days of bachelor\u0026rsquo;s, the installer was so tricky to install GNU / Linux,thereby losing my data (:\nEven though nowadays, Live systems have Calamares based installer,i feel the Graphical Installer is a bit annoying,so i wanted to automate the debian installer using a preseed configuration file,giving answers to debian installer in a config file making it easier and faster.\nThis is the wiki link for Debian Installer Preseeding https://wiki.debian.org/DebianInstaller/Preseed . Preseeding is like a set of answers to debian-installer(d-i) questions.Preseeding can be done in 3 ways\n1.Adding the preseed file to installer\u0026rsquo;s initrd.gz\n2.Over webserver via DHCP\n3.Loading the preseed file from a webserver over the boot options.\nThis blog post explains automating the debian installer by loading the preseed file from a webserver over the boot.\nWhen Graphical Installer boot menu appears after booting through the Debian iso,select the Help entry from the menu. After selecting the Help entry from boot menu,a boot: prompt is displayed below, enter you webserver url of the preseed file, in my case the preseed file was on my server with ip http://144.24.135.168/preseed.cfg/, and give boot: auto url=http://144.24.135.168/preseed.cfg and the auto command launchs the automated debian installer. The default preseed file for new release will be updated here https://wiki.debian.org/DebianInstaller/Preseed#Default_preseed_files Answers like setting username and password for Account setup,Network Configuration,Mirror Settings,Partitioning disks,setting normal user as root user Locales,Keyboard layout,Package Selection and many more\nAll the features in the Debian installer can be answered with the preseed file. My Preseed filed-i mirror/http/hostname string http.us.debian.org d-i mirror/http/directory string /debian d-i mirror/http/proxy string d-i passwd/root-login boolean false d-i passwd/user-fullname string Vinay Keshava d-i passwd/username string vinay d-i passwd/user-password password vinay d-i passwd/user-password-again password vinay d-i clock-setup/ntp boolean true d-i partman-auto/init_automatically_partition select biggest_free In the above preseed file i\u0026rsquo;ve set the debian mirrors [ line 1-3 ]with http.us.debian.org and the directory for the mirror is /debian,Account setup with password[ line 4-8 ], [ line 9 ] for ntp server to sync time with and [ line 10 ] for automatically partitioning the disk with biggest free space disk partition.\nThis is sample preseed file with few options and it can be customized accordingly.\n:wq "},"title":" Automating the Debian Installer"},"/blog/contributing-to-debian/":{"data":{"debian#Debian":"DebianDebian is a GNU/Linux distribution completely inclinded towards Free Software philosophy, maintained by the community.\nBefore talking about how i started contributing to debian, i would like to talk about the camp organized by FSCI It is an online free mentorship programme organized by Free Software Community of India ,introducing people to Free Software.Ravish introduced me to 2021 FSCI\u0026rsquo;s camp, and there i got introduced to Debian Packaging through Debian Developers and Debian Maintainers.\nDuring the project phase of the camp, i choosed to work on Debian Packaging and System Administration(here is my Project Proposal)\n","debian-packages-and-my-story-#Debian Packages and my Story !!":"Debian has roughly over 51,000 packages, these packages are installable through apt, just like \u0026ldquo;sudo apt install nano\u0026rdquo;. I always wanted to know how \u0026ldquo;sudo apt install nano\u0026rdquo; works !.\nDuring the project phase of the camp Praveen my mentor of the project,a Debian Developer himself suggested to get started by packaging node packages(dependencies of Gitlab). A big Thanks to praveen for teaching packaging from scratch, also answering my useless questions and also sponsoring my packages to debian. Initially i found it very difficult to understand it,but the community was so welcoming, they were helping and assisting me by clearing all my doubts through matrix.\nI took a lot of time to learn,tried to spend more time in learning during hectic schedule of college and also i gave up hope many times and restarted it. So initial task was to setup the Debian Unstable environment and rebuilding the existing simple node-pretty-ms package, and then tried a simple package update and then went to continue packaging few node modules.\nI currently maintain around two node modules as of today, looking forward to maintain more packages in debian. All the communication happens mainly through mailing list or irc of respective teams.\n","further-development#Further Development":"Looking forward to contribute and hangout with the awesome debian community and learn more.\n:wq "},"title":"Contributing to Debian"},"/blog/debconf23/":{"data":{"":"Its almost been more than a month since DebConf23 happened,and this post was in draft for very long time because i just wanted to write the best post of all my post, and finally writing about the experience of attending a FOSS conference/conference for the first time.I had graduated in early May'23, so was not sure whether i could attend DebConf.I had joined Deeproot GNU/Linux,just before DebConf as an Intern. I was excited for this because i meeting my Debian and Free Software Community of India friends for the first time in 2 years,i hadn\u0026rsquo;t met anyone physically,was conversing with them online.\nI became a Debian Maintainer in early'2023 March ,special thanks to Praveen my GURU,for advocating my Debian Maintainer process,who taught me Debian Packaging from scratch,answering my stupid questions and Nilesh for signing my keys. I have written a separate blog post about my experience of becoming a DM.\nAhh so this is Ravish [Left] and me. Ravish is my college super senior,we were part of FOSS club called Edwin\u0026rsquo;s Lab in our college,he\u0026rsquo;s the one who introduced me to GNU/Linux. Forever indebted to ravish its because of him i\u0026rsquo;m working at DeeprootLinux,Thanks man.\nIt was my first time flying,I,Abhas - Founder of Deeproot Linux,Ravish boarded a cab to the Bangalore Airport, and we reached around 8:00pm,the architecture of KIAL was just amazing,i was astonished, we had huge baggage to carry for the Mostly Harmless Stall at the airport,so we had rigourous security checks at the airport. We boarded the flight on 9th September, DebConf was about to start from 10th September [ I missed DebCamp ]\nIt was a surreal experience of flying for the first time,it was amazing feel.We also had our dinner (Veg Roll) on the flight. Had the best view of city during the night time,watching\u0026rsquo;em from higher altitude was just so satisfying for eyes. We reached Kochi Airport around 11:15pm and boarded a cab to Four Points Sheraton Hotel. We reached Infopark Kochi around 12:30am and checked in to our hotels.I had applied for Accomodation and Food Bursary and it was approved :) So my room was at Four Points Sheraton Kochi,6th floor, also i was wondering who my roomate was,the earlier day i had receieved a mail that Kurian Benoy was my roommate, i was curious to meet him.\nThe next morning was DebConf Opening Ceremony,so had to sleep because it was already 3:00am i was exploring my hotel room.\nWoke up around 8:00 am and freshened up and headed to FrontDesk for Registration,we got our name with GPG key printed on our ID\u0026rsquo;s,also got the SwagBag,with some cool stickers and swags by Debian. After the registration i met kurian benoy, my roommate for a week.\nStickers part of Debian Swag I and ravish were waiting at the HackLab for the opening ceremony,in mean time we met urbec,part of Video Team,had some good conversation too.\nDEBCONF-23 starts with opening ceremony at Anamudi(These were the hall names,other hall names were Kuthiran,Ponmudi) the DebConf organizing team were on the stage giving a Welcome Note, and then after welcoming ceremony i went to attend talks which we interesting. The talk schedule was not very tight, because we used to gather more at the eating place to meet new people from diverse countries,having some really good conversations.\nI met praveen,shruti,anupa,ravi,sahil,abhijith,nilesh,bilal,suman,kelvin,pushkar,utkarsh,joostvb,Israel Galadima\u0026hellip; and lot more people whom i wanted to meet.\nI also met Pushkar from canonical, who used to stay at Bengaluru in the same locality and that was coincidence,meeting him was great too. First day ended good.\nA picture with Pirate Praveen and Ravi. Abhas's talk on Home automation with his amazing LED pant :) Cheese and wine party, the party is simple to bring good stuff from other countries like cheese and wine, People from all over the world bought different stuff to the cheese and wine party,we got the chance to taste from Korean wafers and red wine.\nOn 13th Sep there\u0026rsquo;s a Day trip,but i hadn\u0026rsquo;t registered early, only for Bird Sanctuary the registration was open,just the day before day trip edited the wiki and added my name. A Day trip to Thattekad Bird Sanctuary On the way to Thattekad i met /su/bin/ siby, on the bus. Thattekad Bird Sanctuary is around 50km from the kochi,so we left around 7:00 am\nWe reached around 9:00 and had snacks and started walking towards the bird sanctuary. It started with a walk around the bird sanctuary spotting for birds around,during the trek i was with Praveen,Bady,Kannan and Kelvin. Spotting birds was difficult because it wasn\u0026rsquo;t the actual season for migrating birds,so we could spot only few. Kelvin was explaining how he started to contribute to Open Street Map.\nOn our way back to the bus it started raining heavily and we were drenched completely, The cool debian umbrella with Debian symbol on it,helped us to get back to the bus.After a hot tea and snacks we started back to kochi.\nDebian and Clouds :)\nThe place were i stayed the most Mostly Harmless Stall (But not Harmless) with Abhas,Akshay explaining people about Liberated Hardware,and why it is important in life to use Liberated Hardware.Enjoyed Sahil\u0026rsquo;s touch typing and testing keyboards,i couldn\u0026rsquo;t take a picture with Sahil,he also volunteers at FSCI managing instances,he taught me git.fosscommunity.in update generating keys etc he\u0026rsquo;s also a Debian Developer,part of DebConf organizing committe too, also met saswata from Unmukti Tech.\nIt was an Amazing conference,it was my first Conference/FOSS conference enjoyed it,got to meet new people,the ecosystem of the Hacklab to hack around,seeing the community bonding even ravish wanted to contribute by packaging so taught him packaging at hacklab during free time,Also i learnt about OpenStreetMap,and now i map in and around Bangalore in my free time,a good hobby that i\u0026rsquo;m interested.Enjoyed ravi\u0026rsquo;s humourous jokes :) throughout DebConf\nThe only disappointing thing at DebConf was the demise of Abraham Raji during a Day Trip,Debian project mourns the death of abraham, i hadn\u0026rsquo;t personally met him,but conversed online about fsci camp,an inspiring soul\nAbraham Lives Onnn!\n"},"title":"DebConf 23,Kochi India"},"/blog/debian-maintainer/":{"data":{"":"I am excited to share with you all that I have recently become a Debian maintainer!! Thanks to amazing debian community.\nIt all started with Software Freedom Camp, ravish my college super senior (we were a part of college linux club) introduced me to software freedom camp organized by FSCI, since then i was a noob hopping between various distro\u0026rsquo;s from kali linux to other debian based distros to arch ! I had previously written my experience of attending software freedom camp here.\nI started with packaging node modules initially without any knowledge of javascript/nodejs, before packaging new module i tried to upgrade few node packages to new upstream,it was difficult at first understanding the packaging process. node-prosemirror-view was the first node module i packaged, cut to 20'23, i maintain few ruby and golang packages most of them which are gitlab dependencies, here is the list of packages i maintain.Special thanks to praveen for his mentoring, who is my package sponsorer.\nOver the past six months, I have been packaging Ruby gems and GitLab dependencies. For this gitlab update, I took on the challenge of building GitLab 15.8.4 and its major components, including Gitlay and GitLab-shell.\nThanks to Praveen and Bilal for their help and support during gitlab package upgrade to 15.8.4.\nThe first package as DM uploaded was ruby-et-orbi.\nWe are also preparing GitLab for bookworm, the next release of Debian.\n"},"title":"Debian Maintainer Now !!!!"},"/blog/git-fosscommunity-in-update/":{"data":{"":"Ahh, my first blog post. Good Beginnings (:\nExcited!!\nThis blog post is dedicated to sharing my experience with updating the FSCI’s GitLab instance git.fosscommunity.in update.\nFSCI runs a free instance of GitLab Community Edition at git.fosscommunity.in for collaborative software development.\nFSCI also hosts and maintains a lot of services for the community, you can check out the services here, these services are managed by volunteers.\nAfter joining Software Freedom Camp 2021 Diversity Edition( Online mentorship programme organized by Free Software Community of India(FSCI) ) as a learner and I met a bunch of people who discuss about Free/Libre/Open Source Software and educate people about why it is important to use free software in our life maintaining freedom and privacy in this era of technology. Along with Ravish and Sahilister we all updated it from GitLab v14.4.2 to Gitlab v14.4.4 it was a Security update, it took a lot of my time to update and upgrade the instance.\nAll thanks to Ravish and Sahilister for helping and teaching me.\n"},"title":"git.fosscommunity.in Server Update"},"/blog/i-should-write-more/":{"data":{"":"2023 is about to end in another few months,I feel ,i should write more now!. I just love writing now,I feel i should write more to express my thoughts,ideas,its been since few months i started to write more docs,and i just simply love it.\nI feel like it helps me document stuff,check how my learning evolved over time and its progress.\nAt first when i started to create my portfolio i was reluctant to write much,barely one or two articles per year,i was not confident about my grammer too,now i really dont care about it,i just write my raw thoughts.There\u0026rsquo;s some level of satisfaction of writing,i encourage others also to write more.\nPeople who read my blog might provide feedback too,correct if any mistakes. I also encourage other people to write, if they are too shy they can try anonymous blog.\n:wq "},"title":"I Should Write more!"},"/blog/software-freedom-camp-2021/":{"data":{"experience-of-running-snikket-server#Experience of Running Snikket Server":"Back to writing after a 2-month long Semester End Exam !!!!.\nEveryone uses messaging platforms like WhatsApp, Facebook, Signal, Telegram, and various other applications to communicate with people, in this blog post I would like to introduce to XMPP Protocol( Extensible Messaging and Presence Protocol), XMPP is an open, decentralized universal messaging standard for instant messaging, voice/video calls. Many Applications or Clients are built using the XMPP protocol due to its open nature. Platforms like WhatsApp, Telegram, Signal impose vendor lock-in wherein the user using the product or service cannot transit to the competitor’s product/service. To overcome vendor lock-in issues and privacy issues one of the minimal, simple best solutions is to set up a Snikket server of your own, where you can own your data.\nWhat is SnikketSnikket is a simple, customized messaging platform that is different from other messaging apps like Whatsapp, Telegram. Snikket is a decentralized messaging platform which means anyone can host their snikket server on their cloud, it allows everyone to host their server. Snikket is free software, a privacy-friendly messaging platform based on XMPP protocol, it can be self-hosted by anyone. Snikket provides an android application client to connect to any XMPP servers and using a snikket account you choose any XMPP clients if you want to connect using android applications like monocles chat, blabber, Snikket app other desktop clients recommended are dino-im and gajim.\nExperience of Running Snikket ServerSnikket is my first self-hosted service, before talking about the experience of running the snikket server I would like to talk about Software Freedom camp 2021 ,the camp is organized by the Free Software Community of India. As a part of the camp initially, learners were made to understand the philosophy and intention behind free software. Later during the project phase, learners were allowed to choose certain available topics proposed by the mentor. After joining the sfcamp as a learner, I choose to learn system administration and Debian packaging, under system administration one of the deliverables was to set up a Snikket server of my own.\nTo run any snikket server basic requirements are a domain name and a VPS (Virtual Private Server )to run your snikket server. I had signed up for the Github Student Developer pack through the pack got the free domain from name.com and I choose Amazon Web Services Free Tier as my VPS.\nSnikket is all about the DNS Docker Daemons Snikket also has an option of creating circles, limiting users to that circle only, although any user can talk to any individual by providing an XMPP or Snikket username. Snikket uses an invite-based procedure for account creation on the server. Only the admin can have the authority to create an invite link. Snikket also supports audio and video calls of great speed, these are some of the features of the snikket application. I have been using Snikket and invited most of my friends to my Snikket server. Initially, it took time to make them understand how it is completely different from other messaging platforms. Later educated them about how decentralization, vendor lock-in works and then introduced them to Snikket and other XMPP-based clients.\nThe learning while setting up the snikket server was got introduced to Docker Container, Domain Name System( DNS ), how server logs are checked, and debugging the errors.\n","guide-to-setup-snikket-server#Guide to Setup Snikket Server":"Here is the quickstart guide to setup the snikket server , this is the official guide by Snikket to setup the snikket server . The detailed documentation is here. Snikket requires few ports to be open for communication refer this which clearly mentions the firewall rules and ports required. Snikket Source code here.\nThanks to Ravish and Sahil for helping to set up the Snikket server.\nNext Goals - Reverse Proxy by Nginx . Bye for now .\n:wq ","what-is-snikket#What is Snikket":""},"title":"Software Freedom Camp 2021 Snikket"},"/docs/":{"data":{"":"I try to hack around a lot of stuff,but lazy to document, but trying to document \u0026rsquo;em all\n"},"title":"Documentation"},"/docs/debian/":{"data":{"":"Tutorials,configs and hacks related to Debian Packaging.\n"},"title":"Debian Packaging"},"/docs/hacks/":{"data":{"":"If things are uncategorized,it goes to Hacks :)\n"},"title":"Hacks"},"/docs/hacks/customize-qcow2-disk-image/":{"data":{"":"Tired of Debian Installer ):\nOn Proxmox VE i had to go through the Debian Installer if i want to spin up a new VM,taking a lot of time and effort.\nDownload the .qcow2 image from cloud.debian.org https://cloud.debian.org/images/cloud/bookworm/20230910-1499/debian-12-genericcloud-amd64-20230910-1499.qcow2 ,this is a generic cloud image which can be easily imported onto proxmox.\nReset the root password on the disk image $ virt-customize -a debian-10-genericcloud-amd64.qcow2 --root-password password:debian\nBy default the .qcow2 doesn\u0026rsquo;t have any root password,so the disk image has be customized using virt-customize to add root password.\nIncrease size of .qcow2 disk image. By default the size of Debian Generic Cloud is 2GB, using qemu-img we can resize the disk image. qemu-img resize image.qcow2 \u0026#43;SIZE Import the disk image on Proxmox VE. Copy the image to /var/lib/vz/template/qemu/. Create a VM on Proxmox VE without any media (do not attach any physical media) and delete any existing disk on proxmox.\nqm importdisk 114 /var/lib/vz/template/qemu/debian-12-genericcloud-amd64-20230910-1499.qcow2 amogha -format qcow2 Execute the above qm importdisk on the proxmox server where 114is the VM id where in your case will be different. Refreshing the Proxmox GUI on the browser,attach the unused Hard Disk under Hardware, also add a cloudInit drive and set IP address to dhcp to automatically assign IP address for both IPv4 and IPv6.\nUnder Options update the boot order and check whether the hard disk which was added to be checklisted and prioritize it to first.\nAnother alternative way is to use Preseed file at boot which automates debian installer,haven\u0026rsquo;t tried that yet.\nCreating a new VM Creating a vm using command line on proxmox without using using the WEB-UI\n#!/bin/bash function newqemu_vm { qm create $vmid --name $name --memory $ram --net0 virtio,bridge=vmbr0 qm importdisk $vmid /var/lib/vz/template/qemu/debian-12-genericcloud-amd64-20230910-1499.qcow2 amogha -format qcow2 sleep 5 qm set $vmid --scsihw virtio-scsi-pci --scsi0 amogha:vm-$vmid-disk-0 qm set $vmid --ide2 amogha:cloudinit --boot c --bootdisk scsi0 --serial0 socket --vga serial0 qm set $vmid --ipconfig0 ip=dhcp qm resize $vmid scsi0 +\u0026#34;$size\u0026#34;G qm set $vmid --sshkey ~/.ssh/id_rsa.pub qm start $vmid } echo \u0026#34;HostName of the VM:\u0026#34; read name echo \u0026#34;Enter new VMID:\u0026#34; read vmid echo \u0026#34;Enter number of CPU cores:\u0026#34; read cpucores echo \u0026#34;Ram:\u0026#34; read ram echo \u0026#34;Enter Total Storage of the VM: [Example: +11G ]\u0026#34; read size newqemu_vm :wq #for now\n"},"title":"Customize .qcow2 image"},"/docs/hacks/mapping-of-physical-usb-ports-to-device-names/":{"data":{"":"","how-to-map-physical-usb-ports-to-device-names-on-gnulinux#How to Map Physical USB ports to Device Names on GNU/Linux":"lsusb command$ lsusb Bus 002 Device 004: ID 04b3:3025 IBM Corp. NetVista Full Width Keyboard Bus 002 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub Bus 003 Device 123: ID 0951:1666 Kingston Technology DataTraveler 100 G3/G4/SE9 G2/50 Bus 003 Device 002: ID 2109:0815 VIA Labs, Inc. USB3.0 Hub $ lsusb -t /: Bus 06.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/2p, 10000M |__ Port 2: Dev 2, If 0, Class=Hub, Driver=hub/7p, 5000M /: Bus 05.Port 1: Dev 1, Class=root_hub, Driver=ehci-pci/3p, 480M |__ Port 1: Dev 2, If 0, Class=Hub, Driver=hub/8p, 480M /: Bus 04.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/2p, 480M /: Bus 03.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/4p, 5000M |__ Port 4: Dev 2, If 0, Class=Hub, Driver=hub/4p, 5000M |__ Port 2: Dev 123, If 0, Class=Mass Storage, Driver=usb-storage, 5000M /: Bus 02.Port 1: Dev 1, Class=root_hub, Driver=ehci-pci/3p, 480M |__ Port 1: Dev 2, If 0, Class=Hub, Driver=hub/6p, 480M |__ Port 3: Dev 4, If 0, Class=Human Interface Device, Driver=usbhid, 1.5M /: Bus 01.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/4p, 480M |__ Port 4: Dev 2, If 0, Class=Hub, Driver=hub/4p, 480M \u0026ldquo;lsusb\u0026rdquo; is a utility of \u0026ldquo;usbutils\u0026rdquo; in GNU/Linux to display information about the USB Buses and the USB\u0026rsquo;s attached to the buses.The output of the command displays the VendorID:ProductID and to which bus it is attached,the \u0026ldquo;Kingston Technology DataTraveler\u0026rdquo; bearing the VendorID:ProductID (0951:1666) attached to bus 003, the lsusb command with option \u0026ldquo;-t\u0026rdquo; provides a tree like output in a hierarchial structure.\n\u0026ldquo;lsblk\u0026rdquo; is a tree-like structure to identify devices and their partitions,and also displays device name (/dev/sd* if its a hard disk,/dev/nvme0n1 in case of SSD),size of the drive/partition, whether it is a disk/partition and the device\u0026rsquo;s mountpoints,here the /dev/sda* is the hard disk and sda1/2/5 are the partitions of the hard disk and /dev/sdb is the Kingston USB drive connected.\n$ lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINTS sda 8:0 0 119.2G 0 disk ├─sda1 8:1 0 118.3G 0 part / ├─sda2 8:2 0 1K 0 part └─sda5 8:5 0 976M 0 part [SWAP] sdb 8:16 1 28.9G 0 disk sr0 11:0 1 1024M 0 rom Suppose if there are multiple USB sticks attached to mutiple physical USB ports how to know which device names is mapped to which USB port ?\nIf there are multiple USB\u0026rsquo;s attached how do we get to know USB drive\u0026rsquo;s device file and to which port that USB is connected ?\nThe answer is by /dev/disk/* Everything in GNU/Linux is either a file or a directory,so even the disk are represented as files in GNU/Linux.\n$ ls -ltrh /dev/disk/ total 0 drwxr-xr-x 2 root root 100 Aug 28 12:28 by-partuuid drwxr-xr-x 2 root root 100 Aug 29 09:49 by-uuid drwxr-xr-x 2 root root 260 Aug 29 09:49 by-path drwxr-xr-x 2 root root 60 Aug 29 09:49 by-label drwxr-xr-x 2 root root 160 Aug 29 09:49 by-id drwxr-xr-x 2 root root 260 Aug 29 09:49 by-diskseq The USB disks can be identified by the Partition UUID, UUID of the disk, by path, by label of the disk and also by disk sequence.\nBy UUID(Universally Unique Identifier) by uuid$ cat /etc/fstab UUID=3341b336-0c26-4079-b3aa-faca8e2dd8b6 / ext4 errors=remount-ro 0 1 UUID=53b53d97-b5e4-43fe-b560-2a01f119b6cf none swap sw 0 0 /dev/sr0 /media/cdrom0 udf,iso9660 user,noauto 0 0 $ ls -ltrh /dev/disk/by-uuid/ total 0 lrwxrwxrwx 1 root root 10 Aug 22 10:40 3341b336-0c26-4079-b3aa-faca8e2dd8b6 -\u0026gt; ../../sda1 lrwxrwxrwx 1 root root 10 Aug 22 10:40 53b53d97-b5e4-43fe-b560-2a01f119b6cf -\u0026gt; ../../sda5 lrwxrwxrwx 1 root root 9 Aug 29 09:49 2010-10-06-11-43-04-00 -\u0026gt; ../../sdb The device /dev/disk/by-uuid/3341b336-0c26-4079-b3aa-faca8e2dd8b6 is simply a symbolic link to actual an device,the reason being this is device name may change depending whether disk is attached or not,whereas these links will point to the same drive,so henceforth safer to use.\nBy-Label by-label$ ls -ltrh /dev/disk/by-label/ total 0 lrwxrwxrwx 1 root root 9 Aug 29 09:49 VINAY-USB -\u0026gt; ../../sdb Labels are easy, it avoids confusion in identifying disk, instead of remembering /dev/sda device file names.\nBy-Path by-path$ ls -ltrh /dev/disk/by-path/ total 0 lrwxrwxrwx 1 root root 9 Aug 22 10:40 pci-0000:00:1f.2-ata-2.0 -\u0026gt; ../../sda lrwxrwxrwx 1 root root 9 Aug 22 10:40 pci-0000:00:1f.2-ata-2 -\u0026gt; ../../sda lrwxrwxrwx 1 root root 10 Aug 22 10:40 pci-0000:00:1f.2-ata-2-part2 -\u0026gt; ../../sda2 lrwxrwxrwx 1 root root 10 Aug 22 10:40 pci-0000:00:1f.2-ata-2.0-part2 -\u0026gt; ../../sda2 lrwxrwxrwx 1 root root 10 Aug 22 10:40 pci-0000:00:1f.2-ata-2-part1 -\u0026gt; ../../sda1 lrwxrwxrwx 1 root root 10 Aug 22 10:40 pci-0000:00:1f.2-ata-2.0-part1 -\u0026gt; ../../sda1 lrwxrwxrwx 1 root root 10 Aug 22 10:40 pci-0000:00:1f.2-ata-2-part5 -\u0026gt; ../../sda5 lrwxrwxrwx 1 root root 10 Aug 22 10:40 pci-0000:00:1f.2-ata-2.0-part5 -\u0026gt; ../../sda5 lrwxrwxrwx 1 root root 9 Aug 22 10:40 pci-0000:00:1f.2-ata-3.0 -\u0026gt; ../../sr0 lrwxrwxrwx 1 root root 9 Aug 22 10:40 pci-0000:00:1f.2-ata-3 -\u0026gt; ../../sr0 lrwxrwxrwx 1 root root 9 Aug 29 09:49 pci-0000:00:14.0-usb-0:4.2:1.0-scsi-0:0:0:0 -\u0026gt; ../../sdb Here /dev/sdb is the USB device attached and \u0026ldquo;pci-0000:00:14.0-usb-0:4.2:1.0-scsi-0:0:0:0\u0026rdquo; file which represents the USB device describes that the USB device is connected from PCI bus to SCSI adapter.\u0026ldquo;by-path\u0026rdquo; is the pci path of the disk device. this device file name is created depending on the shortest physical path to the device. \u0026ldquo;/dev/sda\u0026rdquo; the first SCSI drive on the first SCSI bus,/dev/sdb is the second SCSI drive and /dev/sdc is the third SCSI drive and so on.\n:wq "},"title":"Mapping of Physical USB ports to Device Name on GNU/Linux"},"/docs/interception-vimproved/":{"data":{"":"","#":"Setting up Interception Vimproved on Debian Bookworm I started learning vim few months ago and wanted to try vim key bindings like shortcuts on my laptop after trying a mechanical hackable keyboard.\nInterception Vimproved is a plugin for interception-tools which combines both caps2esc and space on hold work as special fn key. This blog post shows how to setup interception-vimproved using interception-tools on Debian Bookworm.\nStep 1: Dependencies Installing Dependencies to build interception-vimproved on Debian Bookworm GNU/Linux\nsudo apt install interception-tools meson libyaml-cpp-dev cmake interception-tools is a small set of tools for input events of devices,that can be used to customize the behaviour of input keyboard mappings.\nThe advantage of interception-tools operates at lower level compared to xmodmap by using libevdev and libudev.\nStep 2: Clone \u0026amp; Build Clone interception-vimproved repository and build\n$ git clone \u0026#34;https://github.com/maricn/interception-vimproved\u0026#34; $ cd interception-vimproved $ sudo make install Clone the git repository and change the directory, and then launch a make install command to build.\nStep 3: Configuration Create a new file called udevmon.yaml in /etc/interception and paste the following contents into the file /etc/interception/udevmon.yaml\n- JOB: \u0026#34;interception -g $DEVNODE | interception-vimproved /etc/interception-vimproved/config.yaml | uinput -d $DEVNODE\u0026#34; DEVICE: NAME: \u0026#34;.*((k|K)(eyboard|EYBOARD)).*\u0026#34; udevmon.yaml is like a job specification for udevmon,specifying that it matches with (k|K)(eyboard|EYBOARD)) input device.\nℹ️ I haven\u0026rsquo;t tested this for an External Keyboard Input device,but works fine for the built-in keyboard of the laptop. Step 4: Reload udevmon Reload udevmon using systemctl\n$ sudo systemctl restart udevmon Hack around the config To change any keybindings or to add new mappings the config file is present in config.yaml located in /etc/interception-vimproved/ when a sudo make install is launched the config file is copied to /etc/interception-vimproved/config.yaml.\nmy config.yaml has the below shortcuts\n/etc/interception-vimproved/config.yaml- intercept: KEY_CAPSLOCK ontap: KEY_ESC onhold: KEY_LEFTCTRL - intercept: KEY_ENTER # not necessary: ontap: KEY_ENTER is inferred if left empty onhold: KEY_RIGHTCTRL # this is a layer. hold space (onhold) contains several remappings - intercept: KEY_SPACE onhold: # special chars - from: KEY_E to: KEY_ESC # alternative syntax - {from: KEY_D, to: KEY_DELETE} - {from: KEY_B, to: KEY_BACKSPACE} # vim home row - {from: KEY_H, to: KEY_LEFT} - {from: KEY_J, to: KEY_DOWN} - {from: KEY_K, to: KEY_UP} - {from: KEY_L, to: KEY_RIGHT} # vim above home row - {from: KEY_Y, to: KEY_HOME} - {from: KEY_U, to: KEY_PAGEDOWN} - {from: KEY_I, to: KEY_PAGEUP} - {from: KEY_O, to: KEY_END} # number row, to F keys - {from: KEY_1, to: KEY_F1} - {from: KEY_2, to: KEY_F2} - {from: KEY_3, to: KEY_F3} - {from: KEY_4, to: KEY_F4} - {from: KEY_5, to: KEY_F5} - {from: KEY_6, to: KEY_F6} - {from: KEY_7, to: KEY_F7} - {from: KEY_8, to: KEY_F8} - {from: KEY_9, to: KEY_F9} - {from: KEY_0, to: KEY_F10} - {from: KEY_MINUS, to: KEY_F11} - {from: KEY_EQUAL, to: KEY_F12} # xf86 audio - {from: KEY_M, to: KEY_MUTE} - {from: KEY_COMMA, to: KEY_VOLUMEDOWN} - {from: KEY_DOT, to: KEY_VOLUMEUP} # mouse navigation - {from: BTN_LEFT, to: BTN_BACK} - {from: BTN_RIGHT, to: BTN_FORWARD} Interception-tools is packaged on debian,interception-vimproved is not, that is the reason we are building the source of interception-vimproved,hopefully i\u0026rsquo;ll try packaging it !.\nArch has interception-tools already packaged here is the link\n:wq #until next time "},"title":"Interception Vimproved"},"/docs/openldap/":{"data":{"":"","#":"Directory Service ℹ️ Difference between a folder and a directory Folder is for grouping items. Directory has index. It is for finding specific item,Directory is a filesystem concept. In simple terms think directory like a telephone directory which is in a hierarchial structure. The term directory service refers to the collection of software, hardware, and processes that store information about an enterprise, subscribers, or both, and make that information available to users. A directory service consists of at least one instance of Directory Server and at least one directory client program. Client programs can access names, phone numbers, addresses, and other data stored in the directory service.\nA directory is similar to database,which is attribute-based data;where data is read more often than write.\nDirectory Server provides Global Directory Services which means it provides information to wide variety of applications,rather than using databases with different applications,which is very hard to administrate.Directory server is a single solution to manage the same information ℹ️ For example, an organization has three different applications running like nextcloud,email and matrix server and all the applications are accessed by same credentials,if separate database schema\u0026rsquo;s are used for each application it would be hard to manage,if user requesting a password change in one application maybe not be replicated into another application;this problem is solved single,centralized repository of directory information. LDAP provides a common language that client applications and servers use to communicate with one another. LDAP is a \u0026ldquo;lightweight\u0026rdquo; version of the Directory Access Protocol (DAP)\nRDBMS vs Directory Service How often does your data change? Directory servers are used for reads,if your data changes often and have many write operations directory service is not a ideal choice,RDBMS would be the ideal choice. Type of Data? If data is defined in Key:Value pair or Attribute:Value pair, Directory service would be the best choice,like user profile. Data in Hierarchial tree like structure If data can be modeled into a tree like structure,accessing the parent and child node in the tree,directory service OpenLDAP LDAP stands for Lightweight Directory Access Protocol, for accessing directory services.OpenLDAP is the implementation of the LDAP protocol,is a communications protocol that defines the methods in which a directory service can be accessed. The LDAP information model is based on entries, which is a collection of attributes that has a globally unique Distinguished Name(DN) OpenLDAP is the implementation of the LDAP protocol which belong to User Management and Authentication in tech.\nThe LDAP protocol both authenticates and authorize\u0026rsquo;s users to their resources.The protocol authenticates users with a bind operation that allows users to communicate with LDAP directory then authorizes the authenticated user to resources they need if they have access that are defined in rules.Once a user is successfully authenticated, they need to be authorized to access the resource(s) requested. With OpenLDAP, for example, users belong to groups that can be assigned different permissions. If the authenticating user is assigned the correct permissions to access a certain resource, the LDAP protocol will authorize them to it; if not, the protocol will deny access.\nLDAP Data components Directory: an LDAP server\nDIT: the tree of entries stored within a directory server\nAttributes\nData in LDAP system is stored in elements called attributes,like Key Value pair.Data in the attribute must match to the type defined in the attribute\u0026rsquo;s initial declaration.\nmail: user@example.com dc:example,dc:com Entries Attributes by themselves are not useful, a group or collection of attributes under a name represents an entry.\ndn: ou=people,dc=example,dc=com objectClass: person sn: Ramesh cn: Varma An example entry displayed in LDIF ( LDAP Data Interchange Format).\n$ cat ldif/user.ldif dn: uid=vinay.m,ou=People,dc=vinay,dc=im objectClass: top objectClass: inetOrgPerson uid: vinay.m cn: vinay sn: m userPassword: test ou: People dn: uid=akshay,ou=People,dc=vinay,dc=im objectClass: top objectClass: inetOrgPerson uid: akshay cn: akshay sn: p userPassword: test ou: People ObjectClass Object class: a collection of required (MUST) and optional (MAY) attributes. Object classes are further subdivided into STRUCTURAL and AUXILIARY classes, and they may inherit from each other.Every entry has a structural Object class which indicates what type of object an entry is and also can have more auxiliary object that have additional characteristics for that entry.\nThe ObjectClass definitions are stored in the schema files.Object class must have an object identifier (OID) Object classes may also list a set of required attribute types (so that any entry with that object class must also include those attributes) and/or a set of optional attribute types (so that any entry with that object class may optionally include those attributes).OID\u0026rsquo;s are sequence of numbers separated by periods(.), “1.2.840.113556.1.4.473”\nSchema Schema\u0026rsquo;s define the directory, specifying the configuration of the directories including syntax,object classes,attribute types and matching rules.\nslapd - Standalone LDAP Daemon slapd is a LDAP directory server,which stands for Standalone LDAP daemon.Providing simple auth and security layer.\n$ sudo apt install slapd ldapvi ldap-utils ⚠️ when asked for administration password prompt during installation just press Enter,we reconfigure slapd using dpkg-reconfigure after the installation. $sudo dpkg-reconfigure slapd ℹ️ Reconfiguration:\nOmit initial LDAP server config : No we obviously want to create intial configuration. DNS Domain Name : domain name to build the base DN of LDAP directory in this case we are choosing vinay.im. Organization Name: Type down the organization name( here XYZ Pvt Ltd) Choose an Admin Password of your choice( for tutorial purpose i\u0026rsquo;ve choosed test) and choose MDB as backend database If asked to purge database when slapd is removed we choose No,will be helpful when we want to switch to a different LDAP server. Choose Yes if you want to backup the current existing database to /var/backups. To have a look at the LDAP database , simple execute slapcat with sudo privileges.\n$ sudo slapcat$ sudo slapcat dn: dc=vinay,dc=im objectClass: top objectClass: dcObject objectClass: organization o: XYZ Pvt Ltd dc: vinay structuralObjectClass: organization entryUUID: 8057316c-ed6e-103d-8b93-b9da23579469 creatorsName: cn=admin,dc=vinay,dc=im createTimestamp: 20230922083350Z modifiersName: cn=admin,dc=vinay,dc=im modifyTimestamp: 20230922083350Z ℹ️ Config files are present in /etc/ldap directory.\nSchemas can be added within the slap.d directory for server customization.\nDatabase is stored in /var/lib/ldap having two files data.mdb and lock.mdb. $ sudo cp /usr/share/doc/slapd/examples/slapd.conf /etc/ldap/ Copy the example config file slapd.conf to /etc/ldap, and replace DNS domain components dc=example to dc=vinay and dc=com to dc=im everywhere in the config, also update /etc/default/slapd from SLAPD_CONF to SLAPD_CONF=/etc/ldap/slapd.conf and update slapd service by sudo systemctl restart slapd\nIn /etc/ldap/slapd.conf under suffix \u0026quot;dc=vinay,dc=com\u0026quot; add the following lines\nrootdn \u0026#34;cn=admin,dc=vinay,dc=com\u0026#34; rootpw \u0026#34;test\u0026#34; Restart the slapd service again.\n$ sudo systemctl restart slapd ldapsearch ldapsearch anonymous query$ldapsearch -x -b \u0026#34;dc=vinay,dc=im\u0026#34; # vinay.im dn: dc=vinay,dc=im objectClass: top objectClass: dcObject objectClass: organization o: XYZ Pvt Ltd dc: vinay # search result search: 2 result: 0 Success # numResponses: 2 ldapsearch authenticating with admin user$ ldapsearch -D cn=admin,dc=vinay,dc=im -w test -b dc=vinay,dc=im # extended LDIF # # LDAPv3 # base \u0026lt;dc=vinay,dc=im\u0026gt; with scope subtree # filter: (objectclass=*) # requesting: ALL # # vinay.im dn: dc=vinay,dc=im objectClass: top objectClass: dcObject objectClass: organization o: XYZ Pvt Ltd dc: vinay # search result search: 2 result: 0 Success # numResponses: 2 # numEntries: 1 -D {dn} / --bindDN {dn} — The DN to use to bind to the directory server when performing simple authentication,to use the distinguished binddn name to bind the LDAP directory. -w - this option is used to provide the password on the command line for auth, -W option is used to ask for prompt for typing invisible password without actualling having to type the pass on cli. -b - search base as the starting point for the search instead of default. -x option in ldapsearch is used for simple authentication instead of SASL. The above command search\u0026rsquo;s through the ldap directory server with admin distinguished name providing password with the -w option and setting the searchbase to start from the rootdn.\n\u0026ndash; To list all users on ldap\n$ ldapsearch -D \u0026#34;cn=admin,dc=vinay,dc=com\u0026#34; -W -b \u0026#34;dc=vinay,dc=com\u0026#34; $ slapcat lists all users from the base dn\nAdding OU (Organization Unit) Organizational units (OUs) are used to organize entries within the directory tree and can be used to delegate administrative responsibilities within your organization. It’s important to keep your directory organized and well-structured from the beginning; otherwise it will quickly become unwieldy and difficult to manage.\nCreate a directory called ldif(LDAP Interchange Format) in /etc/ldap and create a file called people.ldif and paste the following contents.\n$ cat /etc/ldap/ldif/people.ldif dn: ou=People,dc=vinay,dc=com ou: People cn: people sn: people objectClass: top objectClass: inetOrgPerson $ ldapadd -D cn=admin,dc=vinay,dc=im -w test -f /etc/ldap/ldif/people.ldif adding new entry \u0026#34;ou=People,dc=vinay,dc=im\u0026#34; now slapcat command shows the OU added within the command output.\nAdd new User Adding new user within the newly created OU(Organizational Unit)\n/etc/ldap/john.ldif# cat john.ldif dn: uid=john,ou=People,dc=vinay,dc=com objectClass: top objectClass: inetOrgPerson uid: john cn: john ou: People sn: abraham mail: john@vinay.com userPassword: john Adding the .ldif file using ldapadd command\n$ sudo ldapadd -D \u0026#34;cn=admin,dc=vinay,dc=com\u0026#34; -W -f john.ldif Enter LDAP Password: adding new entry \u0026#34;uid=john,ou=People,dc=vinay,dc=com\u0026#34; Read entries within OU as admin Now we have added an OU and a user john to People OU,lets try to ldapsearch the users within the OU as admin\ndisplay users of an OU as admin$ ldapsearch -D \u0026#34;cn=admin,dc=vinay,dc=com\u0026#34; -w vinay.com -b \u0026#34;ou=People,dc=vinay,dc=com\u0026#34; # extended LDIF # # LDAPv3 # base \u0026lt;ou=People,dc=vinay,dc=com\u0026gt; with scope subtree # filter: (objectclass=*) # requesting: ALL # # People, vinay.com dn: ou=People,dc=vinay,dc=com ou: People cn: people sn: people objectClass: top objectClass: inetOrgPerson # john, People, vinay.com dn: uid=john,ou=People,dc=vinay,dc=com objectClass: top objectClass: inetOrgPerson uid: john cn: john ou: People ou: Support sn: abraham mail: john@vinay.com userPassword:: am9obg== Read entries within OU as normal user. $ ldapsearch -D \u0026#34;uid=john,ou=People,dc=vinay,dc=com\u0026#34; -w john -b \u0026#34;ou=People,dc=vinay,dc=com\u0026#34; # extended LDIF # # LDAPv3 # base \u0026lt;ou=People,dc=vinay,dc=com\u0026gt; with scope subtree # filter: (objectclass=*) # requesting: ALL # # People, vinay.com dn: ou=People,dc=vinay,dc=com ou: People cn: people sn: people objectClass: top objectClass: inetOrgPerson # john, People, vinay.com dn: uid=john,ou=People,dc=vinay,dc=com objectClass: top objectClass: inetOrgPerson uid: john cn: john ou: People ou: Support sn: abraham mail: john@vinay.com userPassword:: am9obg== Modifying existing entries Using ldapmodify to update entries. Now to modify an already added record we use ldapmodify and the attributes that are to be modified are put into a separate file,here john-modify.ldif and to demonstrate here an OU Support is added to the existing entry,along with People OU.\njohn-modify.ldif$ cat /etc/ldap/ldif/john-modify.ldif dn: uid=john,ou=People,dc=vinay,dc=com changetype: modify add: ou ou: Support ldapmodify command for john-modify.ldif$ ldapmodify -D \u0026#34;cn=admin,dc=vinay,dc=com\u0026#34; -W -f john-modify.ldif Enter LDAP Password: modifying entry \u0026#34;uid=john,ou=People,dc=vinay,dc=com\u0026#34; Now running a slapcat command shows the updated OU Support\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 dn: uid=john,ou=People,dc=vinay,dc=com objectClass: top objectClass: inetOrgPerson uid: john cn: john ou: People ou: Support sn: abraham mail: john@vinay.com userPassword:: am9obg== structuralObjectClass: inetOrgPerson entryUUID: 50ea0ea8-f23d-103d-816b-4d9c39504958 creatorsName: cn=admin,dc=vinay,dc=com createTimestamp: 20230928112421Z entryCSN: 20230928120656.291224Z#000000#000#000000 modifiersName: cn=admin,dc=vinay,dc=com modifyTimestamp: 20230928120656Z 2.Using ldapvi to update LDAP entries with a text editor.\nldapvi example$ ldapvi -d --host vinay.im ldapvi is a ldap client using which we can search,modify and delete entries which is easier than ldapmodify instead of adding the updated records in a separate ldif file. ldapvi prompts to open text editor to modify entries,just similar to text editor.\nThe above command will bind anonmously to hostname, here the hostname is vinay.im.After making necessary changes in the entry save from the text editor.\n# ldapvi -d --host nextcloud.vinay.com 3 entries read add: 0, rename: 0, modify: 1, delete: 0 Action? [yYqQvVebB*rsf\u0026#43;?] b --- Login --- Login --- Login Type M-h for help on key bindings. Filter or DN: cn=admin,dc=vinay,dc=im Password: ***** Bound as cn=admin,dc=vinay,dc=im. add: 0, rename: 0, modify: 1, delete: 0 Action? [yYqQvVebB*rsf\u0026#43;?] y Done. after saving and exiting from text editor, an interactive bash prompt [yYqQvVebB*rsf+?]\ny to commit changes.\ne to edit changes.\nv to view changes as LDIF change records.\nb to show login and rebind - we are trying to auth from admin and save the changes to LDAP entries.\n[Reference serverfault] https://serverfault.com/questions/290296/ldapadd-ldapmodify-clarifications-needed-about-these-commands #### Verifying the ```slapd.conf``` Configuration file ```bash $sudo slaptest -v -f /etc/ldap/slapd.conf config file testing succeeded -f : Specifying an alternative configuration file.\n-v : enable verbose mode.\nConventions in OpenLDAP dn - Distinguished Name\nRDN - Relative Distinguished Name\ncn - Common Name\ndc - Domain Component\nmail - Email Address\nou - Organization Unit\nldif - LDAP Data Interchange Format\nldap - Lightweight Directory Access Protocol\nReferences https://access.redhat.com/documentation/en-us/red_hat_directory_server/11/html/deployment_guide/introduction_to_directory_services\nhttps://www.zytrax.com/books/ldap\nhttps://tylersguides.com/guides/openldap-how-to-add-a-user/\nhttps://www.zytrax.com/books/ldap/\n"},"title":"OpenLDAP"},"/docs/selfhosting/":{"data":{"":"Self Hosting\n"},"title":"Self Hosting"},"/docs/selfhosting/nextcloud/":{"data":{"":"","#":"Nextcloud on Debian Nextcloud is a flexible file synchronization and sharing solution.Nextcloud includes Nextcloud server( run on linux) and Nextcloud client.Nextcloud is a Free and Open Source community supported,with all enterprise features. In this doc lets try to install nextcloud server over Nginx and access it over browser client.\nNginx Nginx is Free and Open Source web server which is now also used as reverse proxy,HTTP cache and load balancer.To setup nextcloud we can choose either nginx or apache as webserver. Install and enable nginx service on the server\n$ sudo apt install nginx -y $ sudo systemctl start nginx $ sudo systemctl enable nginx Installation Steps Prerequisites for mannual installation. https://docs.nextcloud.com/server/latest/admin_manual/installation/source_installation.html#prerequisites-for-manual-installation\nInstall php8.0 from deb.sury.org Installing PHP from a third party repository https://deb.sury.org/ which contains the deb packaged version of the latest php and its modules. This repository supports both Ubuntu and Debian.\nif [ \u0026#34;$(whoami)\u0026#34; != \u0026#34;root\u0026#34; ]; then SUDO=sudo fi ${SUDO} apt-get update ${SUDO} apt-get -y install lsb-release ca-certificates curl ${SUDO} curl -sSLo /usr/share/keyrings/deb.sury.org-php.gpg https://packages.sury.org/php/apt.gpg ${SUDO} sh -c \u0026#39;echo \u0026#34;deb [signed-by=/usr/share/keyrings/deb.sury.org-php.gpg] https://packages.sury.org/php/ $(lsb_release -sc) main\u0026#34; \u0026gt; /etc/apt/sources.list.d/php.list\u0026#39; ${SUDO} apt-get update $ sudo apt policy php8.0 # check for any latest updated php package Install the packages mentionedsudo apt install php8.0-xmlreader php8.0-curl php8.0-gd php8.0-mbstring php8.0-zip php8.0-fpm Database connectors (either choose from MySQL/MariaDB and Postgresql)\nmysql database connector$ sudo apt install mariadb-server php8.0-mysql Caching\nphp modules required for caching$sudo apt install redis php8.0-redis https://docs.nextcloud.com/server/latest/admin_manual/installation/nginx.html\nvim /etc/php/8.0/cli/php.ini update date.timezone = Asia/Kolkata cd /var/www sudo wget https://download.nextcloud.com/server/releases/latest.zip sudo chown www-data:www-data /var/www/nextcloud -R \u0026gt; create database nextcloud_db; \u0026gt; create user nextcloud_user@localhost identified by \u0026#39;deeproot\u0026#39;; \u0026gt; grant all privileges on nextcloud_db.* to nextcloud_user@localhost identified by \u0026#39;deeproot\u0026#39;; \u0026gt; flush privileges \u0026gt; exit Nginx Configuration file. paste the following in /etc/nginx/sites-enabled/nextcloud and remove any default files present. and also make a symlink from /etc/nginx/sites-enabled/nextcloud to /etc/nginx/sites-available/nextcloud\nhost nextcloud.vinay.com\nupstream php-handler { #server 127.0.0.1:9000; server unix:/var/run/php/php8.0-fpm.sock; } # Set the `immutable` cache control options only for assets with a cache busting `v` argument map $arg_v $asset_immutable { \u0026#34;\u0026#34; \u0026#34;\u0026#34;; default \u0026#34;immutable\u0026#34;; } server { listen 80; server_name nextcloud.vinay.com; # Path to the root of your installation root /var/www/nextcloud; # Use Mozilla\u0026#39;s guidelines for SSL/TLS settings # https://mozilla.github.io/server-side-tls/ssl-config-generator/ #ssl_certificate /etc/ssl/nginx/cloud.example.com.crt; #ssl_certificate_key /etc/ssl/nginx/cloud.example.com.key; # Prevent nginx HTTP Server Detection server_tokens off; # HSTS settings # WARNING: Only add the preload option once you read about # the consequences in https://hstspreload.org/. This option # will add the domain to a hardcoded list that is shipped # in all major browsers and getting removed from this list # could take several months. #add_header Strict-Transport-Security \u0026#34;max-age=15768000; includeSubDomains; preload\u0026#34; always; # set max upload size and increase upload timeout: client_max_body_size 512M; client_body_timeout 300s; fastcgi_buffers 64 4K; # Enable gzip but do not remove ETag headers gzip on; gzip_vary on; gzip_comp_level 4; gzip_min_length 256; gzip_proxied expired no-cache no-store private no_last_modified no_etag auth; gzip_types application/atom\u0026#43;xml text/javascript application/javascript application/json application/ld\u0026#43;json application/manifest\u0026#43;json application/rss\u0026#43;xml application/vnd.geo\u0026#43;json application/vnd.ms-fontobject application/wasm application/x-font-ttf application/x-web-app-manifest\u0026#43;json application/xhtml\u0026#43;xml application/xml font/opentype image/bmp image/svg\u0026#43;xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy; # Pagespeed is not supported by Nextcloud, so if your server is built # with the `ngx_pagespeed` module, uncomment this line to disable it. #pagespeed off; # The settings allows you to optimize the HTTP2 bandwitdth. # See https://blog.cloudflare.com/delivering-http-2-upload-speed-improvements/ # for tunning hints client_body_buffer_size 512k; # HTTP response headers borrowed from Nextcloud `.htaccess` #add_header Referrer-Policy \u0026#34;no-referrer\u0026#34; always; #add_header X-Content-Type-Options \u0026#34;nosniff\u0026#34; always; #add_header X-Download-Options \u0026#34;noopen\u0026#34; always; #add_header X-Frame-Options \u0026#34;SAMEORIGIN\u0026#34; always; #add_header X-Permitted-Cross-Domain-Policies \u0026#34;none\u0026#34; always; #add_header X-Robots-Tag \u0026#34;noindex, nofollow\u0026#34; always; #add_header X-XSS-Protection \u0026#34;1; mode=block\u0026#34; always; # Remove X-Powered-By, which is an information leak fastcgi_hide_header X-Powered-By; # Add .mjs as a file extension for javascript # Either include it in the default mime.types list # or include you can include that list explicitly and add the file extension # only for Nextcloud like below: include mime.types; types { text/javascript js mjs; } # Specify how to handle directories -- specifying `/index.php$request_uri` # here as the fallback means that Nginx always exhibits the desired behaviour # when a client requests a path that corresponds to a directory that exists # on the server. In particular, if that directory contains an index.php file, # that file is correctly served; if it doesn\u0026#39;t, then the request is passed to # the front-end controller. This consistent behaviour means that we don\u0026#39;t need # to specify custom rules for certain paths (e.g. images and other assets, # `/updater`, `/ocm-provider`, `/ocs-provider`), and thus # `try_files $uri $uri/ /index.php$request_uri` # always provides the desired behaviour. index index.php index.html /index.php$request_uri; # Rule borrowed from `.htaccess` to handle Microsoft DAV clients location = / { if ( $http_user_agent ~ ^DavClnt ) { return 302 /remote.php/webdav/$is_args$args; } } location = /robots.txt { allow all; log_not_found off; access_log off; } # Make a regex exception for `/.well-known` so that clients can still # access it despite the existence of the regex rule # `location ~ /(\\.|autotest|...)` which would otherwise handle requests # for `/.well-known`. location ^~ /.well-known { # The rules in this block are an adaptation of the rules # in `.htaccess` that concern `/.well-known`. location = /.well-known/carddav { return 301 /remote.php/dav/; } location = /.well-known/caldav { return 301 /remote.php/dav/; } location /.well-known/acme-challenge { try_files $uri $uri/ =404; } location /.well-known/pki-validation { try_files $uri $uri/ =404; } # Let Nextcloud\u0026#39;s API for `/.well-known` URIs handle all other # requests by passing them to the front-end controller. return 301 /index.php$request_uri; } # Rules borrowed from `.htaccess` to hide certain paths from clients location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/) { return 404; } location ~ ^/(?:\\.|autotest|occ|issue|indie|db_|console) { return 404; } # Ensure this block, which passes PHP files to the PHP process, is above the blocks # which handle static assets (as seen below). If this block is not declared first, # then Nginx will encounter an infinite rewriting loop when it prepends `/index.php` # to the URI, resulting in a HTTP 500 error response. location ~ \\.php(?:$|/) { # Required for legacy support rewrite ^/(?!index|remote|public|cron|core\\/ajax\\/update|status|ocs\\/v[12]|updater\\/.\u0026#43;|oc[ms]-provider\\/.\u0026#43;|.\u0026#43;\\/richdocumentscode\\/proxy) /index.php$request_uri; fastcgi_split_path_info ^(.\u0026#43;?\\.php)(/.*)$; set $path_info $fastcgi_path_info; try_files $fastcgi_script_name =404; include fastcgi_params; fastcgi_pass unix:/var/run/php/php8.0-fpm.sock; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; fastcgi_param PATH_INFO $path_info; fastcgi_param HTTPS off; fastcgi_param modHeadersAvailable true; # Avoid sending the security headers twice fastcgi_param front_controller_active true; # Enable pretty urls #fastcgi_pass php-handler; fastcgi_intercept_errors on; fastcgi_request_buffering off; fastcgi_max_temp_file_size 0; } # Serve static files location ~ \\.(?:css|js|mjs|svg|gif|png|jpg|ico|wasm|tflite|map)$ { try_files $uri /index.php$request_uri; add_header Cache-Control \u0026#34;public, max-age=15778463, $asset_immutable\u0026#34;; access_log off; # Optional: Don\u0026#39;t log access to assets location ~ \\.wasm$ { default_type application/wasm; } } location ~ \\.woff2?$ { try_files $uri /index.php$request_uri; expires 7d; # Cache-Control policy borrowed from `.htaccess` access_log off; # Optional: Don\u0026#39;t log access to assets } # Rule borrowed from `.htaccess` location /remote { return 301 /remote.php$request_uri; } location / { try_files $uri $uri/ /index.php$request_uri; } } OpenLDAP \u0026amp; NextCloud. To add support for OpenLDAP in nextcloud install ldap php library from deb sury repository.\n$ sudo apt install php8.0-ldap and then later enable LDAP user and group backend on nextcloud Apps\n"},"title":"NextCloud"}}